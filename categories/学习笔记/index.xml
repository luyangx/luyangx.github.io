<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>学习笔记 on Yang</title>
    <link>https://www.luyang.ink/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
    <description>Recent content in 学习笔记 on Yang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 04 Nov 2016 23:04:23 +0800</lastBuildDate>
    
	<atom:link href="https://www.luyang.ink/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MySQL Server调优</title>
      <link>https://www.luyang.ink/posts/mysql-server-turning/</link>
      <pubDate>Fri, 04 Nov 2016 23:04:23 +0800</pubDate>
      
      <guid>https://www.luyang.ink/posts/mysql-server-turning/</guid>
      <description>&lt;p&gt;衡量数据库性能的指标, 一般有2个指标: 响应时间和吞吐率. 响应时间又包括等待时间和执行时间. 调优的目的是降低响应时间, 提高吞吐率.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL EXPLAIN</title>
      <link>https://www.luyang.ink/posts/mysql-explain/</link>
      <pubDate>Tue, 25 Oct 2016 21:07:41 +0800</pubDate>
      
      <guid>https://www.luyang.ink/posts/mysql-explain/</guid>
      <description>&lt;p&gt;EXPLAIN 命令输出的信息可以告诉我们 MySQL 是怎么执行 SQL 语句的, 访问了哪些表, 以及如何访问数据的. 其中有很重要的索引使用信息, 可以根据此信息来判断 SQL 是否需要优化&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL 之 InnoDB . 复制</title>
      <link>https://www.luyang.ink/posts/mysql-innode-rep/</link>
      <pubDate>Tue, 11 Oct 2016 21:07:41 +0800</pubDate>
      
      <guid>https://www.luyang.ink/posts/mysql-innode-rep/</guid>
      <description>&lt;p&gt;学习记录 InnoDB 复制相关内容&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL 之 InnoDB . 事务</title>
      <link>https://www.luyang.ink/posts/mysql-innodb-trx/</link>
      <pubDate>Thu, 06 Oct 2016 10:22:35 +0800</pubDate>
      
      <guid>https://www.luyang.ink/posts/mysql-innodb-trx/</guid>
      <description>&lt;p&gt;学习记录 InnoDB 事务相关内容&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL 之 InnoDB . 锁</title>
      <link>https://www.luyang.ink/posts/mysql-innodb-lock/</link>
      <pubDate>Wed, 05 Oct 2016 16:12:43 +0800</pubDate>
      
      <guid>https://www.luyang.ink/posts/mysql-innodb-lock/</guid>
      <description>&lt;p&gt;学习记录 InnoDB 锁相关内容&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL 之 InnoDB . 索引</title>
      <link>https://www.luyang.ink/posts/mysql-innodb-index/</link>
      <pubDate>Fri, 30 Sep 2016 20:43:21 +0800</pubDate>
      
      <guid>https://www.luyang.ink/posts/mysql-innodb-index/</guid>
      <description>&lt;p&gt;学习记录 InnoDB 索引相关内容&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL 之 InnoDB . 表</title>
      <link>https://www.luyang.ink/posts/mysql-innodb-table/</link>
      <pubDate>Wed, 07 Sep 2016 21:12:53 +0800</pubDate>
      
      <guid>https://www.luyang.ink/posts/mysql-innodb-table/</guid>
      <description>&lt;p&gt;学习记录 InnoDB 表相关内容&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL 之 InnoDB . 初见</title>
      <link>https://www.luyang.ink/posts/mysql-innodb/</link>
      <pubDate>Wed, 24 Aug 2016 22:43:39 +0800</pubDate>
      
      <guid>https://www.luyang.ink/posts/mysql-innodb/</guid>
      <description>&lt;p&gt;InnoDB 存储引擎支持事务, 其设计目的主要面向在线事务处理(OLTP)的应用. 其特点是行锁, 外键, 非锁定读等, MySQL在5.5.8版本后将其设为默认存储引擎.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go 语言基础 . 函数、方法和接口</title>
      <link>https://www.luyang.ink/posts/go-basic-func-method-interface/</link>
      <pubDate>Sat, 30 Apr 2016 21:03:56 +0800</pubDate>
      
      <guid>https://www.luyang.ink/posts/go-basic-func-method-interface/</guid>
      <description>&lt;p&gt;记录一下 Go 语言中的函数、方法和接口&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go 语言基础 . 数组、字符串和切片</title>
      <link>https://www.luyang.ink/posts/go-basic-array-string-slice/</link>
      <pubDate>Sat, 23 Apr 2016 19:21:34 +0800</pubDate>
      
      <guid>https://www.luyang.ink/posts/go-basic-array-string-slice/</guid>
      <description>&lt;p&gt;记录一下 Go 语言中的数据结构 . 数组、字符串和切片&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dynamic Memory Management</title>
      <link>https://www.luyang.ink/posts/dynamic-memory-management/</link>
      <pubDate>Mon, 18 Apr 2016 20:24:24 +0800</pubDate>
      
      <guid>https://www.luyang.ink/posts/dynamic-memory-management/</guid>
      <description>&lt;p&gt;&amp;laquo;C in a Nutshell&amp;raquo;笔记 - 内存管理&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Input and Output</title>
      <link>https://www.luyang.ink/posts/input-and-output/</link>
      <pubDate>Sat, 16 Apr 2016 21:01:12 +0800</pubDate>
      
      <guid>https://www.luyang.ink/posts/input-and-output/</guid>
      <description>&lt;p&gt;&amp;laquo;C in a Nutshell&amp;raquo;笔记 - 输入输出&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Multithreading</title>
      <link>https://www.luyang.ink/posts/multithreading/</link>
      <pubDate>Fri, 15 Apr 2016 20:33:58 +0800</pubDate>
      
      <guid>https://www.luyang.ink/posts/multithreading/</guid>
      <description>&lt;p&gt;&amp;laquo;C in a Nutshell&amp;raquo;笔记 - 多线程&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Declarations</title>
      <link>https://www.luyang.ink/posts/declarations/</link>
      <pubDate>Tue, 05 Apr 2016 21:33:01 +0800</pubDate>
      
      <guid>https://www.luyang.ink/posts/declarations/</guid>
      <description>&lt;p&gt;&amp;laquo;C in a Nutshell&amp;raquo;笔记 - 声明&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Structure</title>
      <link>https://www.luyang.ink/posts/structure/</link>
      <pubDate>Tue, 05 Apr 2016 19:06:42 +0800</pubDate>
      
      <guid>https://www.luyang.ink/posts/structure/</guid>
      <description>&lt;p&gt;&amp;laquo;C in a Nutshell&amp;raquo;笔记 - 结构体&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>references in php</title>
      <link>https://www.luyang.ink/posts/references-in-php/</link>
      <pubDate>Mon, 03 Nov 2014 22:20:49 +2002</pubDate>
      
      <guid>https://www.luyang.ink/posts/references-in-php/</guid>
      <description>&lt;meta name=&#34;referrer&#34; content=&#34;no-referrer&#34;&gt;
&lt;p&gt;PHP中的变量都是存储在一个叫zval的容器中(数据结构), 这个zval中存储着变量的相关信息，其中就包括变量的引用状态(is_ref)和引用次数(refcount)。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>